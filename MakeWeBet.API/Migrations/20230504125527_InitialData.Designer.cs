// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace MakeWeBet.API.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230504125527_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BarcodeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("WalletBal")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BarcodeId = "b5eda94a-a70a-4ed0-94c1-e5e5f1422c16",
                            Name = "Iam",
                            WalletBal = 56000m
                        },
                        new
                        {
                            Id = 2,
                            BarcodeId = "1784a490-143d-4ae8-885c-662b9ba3f197",
                            Name = "Yah",
                            WalletBal = 200000m
                        },
                        new
                        {
                            Id = 3,
                            BarcodeId = "6a68b7ff-0fd7-4d9d-85ae-8c39f62b04bf",
                            Name = "Jah",
                            WalletBal = 149000m
                        });
                });

            modelBuilder.Entity("Entities.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ProductBarcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gummies",
                            Price = 1200m,
                            ProductBarcCode = "5209f5ea-10b4-4ffa-886a-7249f7116a8e",
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Yogurt",
                            Price = 1500m,
                            ProductBarcCode = "582e592a-5adf-4672-b95e-029a7b468a7c",
                            StoreId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Orbit",
                            Price = 400m,
                            ProductBarcCode = "c36dc4a5-e06d-411a-926f-9d209012b5b0",
                            StoreId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Malt",
                            Price = 800m,
                            ProductBarcCode = "74851dc9-96b9-444f-a55c-a3600f1bab51",
                            StoreId = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Coke",
                            Price = 300m,
                            ProductBarcCode = "d42dc085-5712-45bd-9c14-4b5e5d7d5b1a",
                            StoreId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Yogurt",
                            Price = 1200m,
                            ProductBarcCode = "36125b17-1ac9-4430-b62e-b7f2626c7e8d",
                            StoreId = 3
                        });
                });

            modelBuilder.Entity("Entities.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "No 2 CD Close, Enugu",
                            Name = "GIG"
                        },
                        new
                        {
                            Id = 2,
                            Address = "12 New Heaven, Enugu",
                            Name = "ATM"
                        },
                        new
                        {
                            Id = 3,
                            Address = "=Port Harcourt",
                            Name = "MGIG"
                        });
                });

            modelBuilder.Entity("Entities.Models.Product", b =>
                {
                    b.HasOne("Entities.Models.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Entities.Models.Store", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
